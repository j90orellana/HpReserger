<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAQmSURBVFhH7ZhdbBRVFMdniVGCRoyAD774jm9EH/wiqEFTw8zs7NKCFAwUCAKpjY0WZ2ZndyiV
        7UekfJhAQoAYKAKRj9LZOzPbVJBiUgoaIdIUBOQjFCxQ2h3YLii9nrs5m7BtMeO2y9bYX3If5tx/Zs7M
        ufeec4YbZSQiyfsmfKBGXsLLkYek2b8KKvkzTyfPoil78HrDOFE23pohN7zm9oHg4CdSyN6i6/oYNGUH
        USYzpYDZPWvV9z0ffnm426uSuFexNJzOLaJqvC5p1l1tzxVaY3YnR8X+P2hBeZPjDZClKMsdPs02P93a
        3pdyLjWC4DA4fg1lGePV9z/nD9rEH4rasIwmotk9vqB9deXejjTn2Kgm3dQbMO+995n9NEozgleM4vk1
        PyYWrGm5LyiRz9HsHni7n9RvLw5wMHzwBhUD5C7HUQ9KM0JQI694VTMuqmavIJM30OweSTVL56z+wamO
        3E5zcMmGE72SFt2NsiHBQpsnk0l4+e+Yph96AtYaKVjZ5JRsOd1Xuq2dFoabHbCdzdet51GWW9g5JqqE
        F1VrI6y77aJCPgLHx+L0KKMMO7xqvinp1hHIpbfhoL7uC9l1Qln9izidW2Yo5ruwEeKl2870VdR30vJ9
        1+nHX/+cYFkjo5N+uPFq1m8rdpwfkNqKao/FpaBZjbKsAoe2JAWsTp9mdYiK+T6aOS5fP/QMfKlelsb6
        OxjYfZn6dfsXlGYViGBMg+cpdb9T5iSaOY7VeZB2EjVmetZIOrjrEoW1eBKlWYR6mIMhKEZYipU0M70g
        AY/Plm0/N2iIIfxVKMsqLMTwrC4fhDktxAxI3lNTmyRs3KIVBzqTmwRsHaw0QlluYaU9lFlHWYUBlXSX
        FLR2jphjZpT/JawmhF1VBuuyDcZ5vxbd8Fh6XbewynluZbPDDk/9u6t08drjcTifzjDHUTIEqEdQjNkw
        ylkHiUb38Jr1sj/U6FRFutLOxXlVzY6gkkKUZQxkrm+gpYgVbzr1APqfO/Dis3HKHaISmbPgq5aeh51j
        o2RzG4V+ZR3KMoKlVjFgJlIvn8xWwWgbTruDfXZo0nv65+dFta1xXjWWoSwj2O8UaP7vhRtuJu8p113I
        JJ1SD4ThxFLIJpVGF2XdXenW9geQWW7mr2gcj6IBwJp6W1BIEa80TEHToEjBaGXBqqbY4vWtvbABHeiN
        p+OUeyTdfgGyyQFwKgHFxH240XFRJpNxuh/UA1/BZL9GFq1tjfv16B3I7/+Yw/kAeYeXjYWPvqdL2K7N
        KyZP4eWgQPc36+E+moXPH4o6bLOhJLfAzq4t2Xw6bb0WrWmJQcjnoiS3sFDNqznqpJxjO3Sm3ujwX5iv
        oiS35Ot7noQK6GRh+Ehs+aZTf8FajEmh4flFMmwwJ9mX5BVSIciGb6g/mP4DcNzfzOTAiGTLo9gAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>