<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnconviviente.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABBNJREFUSEutlm1Mk1cUxw+VsomwGRKWbIkjWbKY6ULil+0LfCAuJJNki0s2BtHJ
        3AAjwwQKW8DK3GRiyigy6oCKiOVFOlpe5U0cwpCXbAQFZCSsKMproRXkrQjsnJ3bPSZdQsE4TvJL/ufe
        c//n3vt8eC48d5wFN1DDMZcslybvIu9xrwKvEbgANZAGwXAGXKSq54xz4AMZcCegIYCyh7PJOFGKDKWb
        0mlf5T6EdLgOKtgpVf8bsVmdMkV2p9tTYrM7XaWp/8aX4AHnYcC/2R9VD36gVFMStY03Y92DSlIPf0cp
        w8m4t24vQSo0QhjI7GsiVA1e+a3Wx4VtVnyKrs26qmm0xtsLHCMSvnUvdccjf36KXw+FYkLfQRx+9Bd2
        PmzCpMFPUGEKxeC+j1BWIENuEGpf88W5ep+CWxZkSMKuda0WzGiwXE6vmz4rUBZ3pcjTto971O+g/R1v
        49HbvhTVuptM5n5sGaymmK499Fm3L/q37yG3a3KCGL4qEUdUrT7aJjMyJLGuTqvpJ9ABbisBymxWY21f
        GTUwc0uzODkzatc1fWWYWB1HsnIg/k4TEHPF9E6M7t6hxJL7uBlRl1oR9NzgKmB5twH7x3pxgFlesaFo
        InT/WA9mNKlRVgEIWhcLfJX/cCq2cNQSVzyKDEmsq6NyeumFop0ouwb0WhmgXz3QB5VAg5O9eGPAQAc5
        f7cO8JUy3j3XvJSzewVCLowMHc4emwzTjiFDEuvqwxoT+WgOIFQAeVYD+t4ECmjkBtPcYMhA+1uA3voV
        cHsVN+DGb6Z8Pg1Hc6fuhOdZJiMvT+NmROSZMSjZgPIKTwQDoOcvgK+XAtbcM6C2V427+FTuPAZGwB0l
        r64FKav74bhu9lZ00dxkdOEsMiThTFPkxRH0+z6Z5LUeCHwVMh2Q/BIgQy4FvHO+e/dKb3ovKWsmInei
        DRT6hevxpYvmOP08PgsK/Rwev3gf3z+Zjbu0fuhWyaep4l3zlb1Y7oVvaALxw1PFeCJ/3ByrX2iAk+VL
        hlMVS+bEsgVkSMKZlvJ5ir86heHnf6ePE/R0QJGJQYqfKVhppGOa2/iN3krCU3jDmRqbLrnWZj5dvYgM
        STjTjjmerlqgpIrHpDRaUWl8xHqOeMw+LzyFN6Q2Lmt+bFw2p9QtIkMSzrRjvmG98BTekNnyRMVMpd1Y
        wq1EeApvyO1YVWo7VqYzW2w8aCMJZ9ox37BeeApvKOxei73StWrJabehtp0nGGfaMd+sXngKbzDe/Tu8
        pGfNmv/HE9xKhKfw5gYrIcU9azN5PMiQhDPtmG9YLzyNd1dD4JBCFfjTb/OL6puzuJUIz7CEjEDY5ur6
        Mv8SQpho5oSEM+2Yb1QvCHGVuwlve4hXgPh/biX/82XxTAHwD1ZAHZBnGRvGAAAAAElFTkSuQmCC
</value>
  </data>
</root>